package TechStudy::Color;
use strict;
use warnings;

use Data::Dumper;

sub new {
    my ($class, $args ) = @_;
    print Dumper($class, $args);
    return bless {
        _R => $args->{R},
        _G => $args->{G},
        _B => $args->{B}
    }, $class;
}
sub new_from_code {
    my $class = shift;
    my $color_code = shift;
    my %args;
    if($color_code =~ /^#(.{2})(.{2})(.{2})/) {
        print $1, " ", $2, " ", $3, "\n";
        $args{R} = hex $1;
        $args{G} = hex $2;
        $args{B} = hex $3;
    }
    return new("TechStudy::Color", \%args);
}
sub mix_color {
    my $self = shift;
    my $other = shift;
    my %args;
    $args{R} = ($self->{_R} + $other->{_R}) % 256;
    $args{G} = ($self->{_G} + $other->{_G}) % 256;
    $args{B} = ($self->{_B} + $other->{_B}) % 256;
    return new("TechStudy::Color", \%args); 
}
sub get_color_code {
    my $self = shift;
    # ここにロジックを書いてください.
    #return "#8888CC"; # 適当な値( 修正してください )
    return "#" . sprintf("%02x", $self->{_R}) . sprintf("%02x", $self->{_G}) . sprintf("%02x", $self->{_B});
}

1;
