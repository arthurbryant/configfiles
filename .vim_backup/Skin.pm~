package Mixi::Pages2::Plugin::Skin;

use Mixi::Pages2::Plugin qw/+Accessor/;

plugins qw/
    Mixi::Pages2::Plugin::Member
    Mixi::Pages2::Plugin::Owner
    Mixi::Pages2::Plugin::Template
/;

accessor 'skin_id';

# TODO: alert のフォロー
hook_to '/main/dispatch/collect' => sub {
    my $self = shift;
    return;
    if ($self->template->can('skin_option')) {
        $self->template->skin_option(_get_skin_options($self) || undef);
    }
};

no  Mixi::Pages2::Plugin;

# private methods:

sub _get_skin_options {
    my $self = shift;
    require Mixi::Skin;
    return Mixi::Skin->get_instance->get_skin(id => $self->skin_id)
        if defined $self->skin_id and $self->skin_id != 0;
    return unless $self->member;
    my $member_id = $self->owner ? $self->owner->{id} : $self->member->{id};
    return unless $member_id;
    return Mixi::Skin->get_instance->get_member_skin(member_id => $member_id);
}

1;

__END__
