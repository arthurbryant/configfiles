
/*
 * GET iyada search home and res list.
 */

exports.main = function(req, res){
        var mysql = require('mysql');
        var connection = mysql.createConnection({
                host     : 'mysql.lo.mixi.jp',
                user     : 'root',
                password : '',
                database : 'akio_watanabe',
        });
        var sql = "select * from hot_queries";
        connection.connect();

    var query = connection.query(sql,
        function(err, rows, field) {
        /*
            if(err) throw err;

            var json = JSON.stringify(rows);
            res.contentType('application/json');
            res.send(json);
            console.dir(json);
            */
            res.render('iyada/list', {data : rows});
        }
    );
};

/*
 * POST learning stuff.
 */

exports.tracer = function(req, res){
    var db = require( '../../lib/db');
console.dir(req.body);
    if( req.body.order ) db.insertDecidedOrder(req.body.order);

    var iyadas = req.body.iyadas;
    if( !iyadas || !iyadas.length ) return;

    for( var i = 0; i < iyadas.length; i++){
        db.insertAssociation(iyadas[i], req.body.category);
    }
}

/*
 * POST return json restaurant list by iyada strings.
 * JSON
 */

exports.search = function(req, res){
    var JAVA_BIN_PATH = "/home/bkapps/git/banana/banana/javabin/";
    var MYSQL_PATH = JAVA_BIN_PATH + "lib/mysql-connector-java-5.1.25-bin.jar";

    var exec = require('child_process').exec,
    child;
    var recommends = [];

    var iyadaString = '';
    if( req.body.iyadas && req.body.iyadas.length ){
        iyadaString = req.body.iyadas.join(' ');
    }
    var command = 'cd ' + JAVA_BIN_PATH + '; /usr/java/jdk1.7.0_05/bin/java -classpath .:' + MYSQL_PATH + ' IyadaSearch "' + iyadaString + '"'; 
    //child = exec('cd JAVA_BIN_CLASS; java -classpath .:/home/bkapps/banana_xp/javabin/lib/mysql-connector-java-5.1.25-bin.jar IyadaSearch "' + iyadaString + '"',
    child = exec(
        command,
        function (error, stdout, stderr) {
            console.log('stdout: ' + stdout);
            //console.log('stderr: ' + stderr);
            if (error !== null) {
                console.log('exec error: ' + error);
            }
            var lines = stdout.split('\n');
            for( var i=0; i<lines.length; i++ ){
                if( !lines[i] ) break;
                var tokens = lines[i].split(',');
                recommends.push({
                    id:         tokens[0],
                    name:       tokens[1],
                    walktime:   tokens[2],
                    category:   tokens[3],
                    menu:       tokens[4],
                    price:      tokens[5],
                    evaluation: tokens[6],
                    imageUrl:   tokens[7],
                    tabelogUrl: tokens[8]
                });
            }
            var json = JSON.stringify(recommends);
            //console.log(json);
            res.contentType('application/json');
            res.send(json);
        }
    );
};


