use strict;
use warnings;
use Test::More;

use Mixi::Test;
use Mixi::Community::DB;
use Data::Dumper;
use Mixi::Test::DataFactory qw/Mixi::Community::Entry/;

my @communities;
my $community_data;
for (my $i = 0; $i < 10; ++$i) {
    $community_data = Mixi::Test::DataFactory->make('Mixi::Community::Entry' => {
name => $i 
    });
    warn Dumper $community_data;
    push @communities, $community_data;
}

print Dumper($community_data);

my $community_id = 1000;

subtest 'select commuity' => sub {
    my $db = Mixi::Community::DB->new->adapter('-Node' => { role => 's',community_id => $community_id });

    my $result = $db->select_community(community_id=>$community_id);
    map{
        ok( $result->{$_},$_)
    }qw/ id name create_date update_date level
        admin_id category_id logo logo_ext 
        details public
    /;
    print Dumper($result);
};


done_testing();
