package Mixi::Skin::Touch::Controller::Admin::Store::ManageTopBanner;

use strict;
use warnings;
use utf8;

use List::MoreUtils qw/all/;

use Mixi::Pages;
use Mixi::Skin::Touch::Admin;
use Mixi::Skin::Touch::Store::TopBanner;

use constant {
    SUCCEEDED_TO_SAVE_MESSAGE => '保存しました',
    FAILED_TO_SAVE_MESSAGE    => '保存に失敗しました',
};

__PACKAGE__->use_perlstring(1);
__PACKAGE__->auth_type(AUTH_UNREQUIRED);
__PACKAGE__->is_admin(1);
__PACKAGE__->charset('euc-jp');
__PACKAGE__->initial_params(
    mode => 'main',
);

__PACKAGE__->validation(
    _default => [
        mode => [[IN_ARRAY => qw/main success add edit remove/]],
    ],
    postkey => [
        postkey  => [['POSTKEY', qw/_ENV_REMOTE_USER_ _TIMESTAMP_/]],
    ],
    add => [
        link_url  => ['NOT_BLANK', 'HTTP_URL'],
        image_url => ['NOT_BLANK', 'HTTP_URL'],
    ],
    edit => [
        id        => ['NOT_BLANK', 'POSITIVEINT'],
        link_url  => ['NOT_BLANK', 'HTTP_URL'],
        image_url => ['NOT_BLANK', 'HTTP_URL'],
    ],
    remove => [
        id => ['NOT_BLANK', 'POSITIVEINT'],
    ],
);

__PACKAGE__->warnings([
    id        => [
        'NOT_BLANK'   => 'バナーIDが不正です。',
        'POSITIVEINT' => 'バナーIDが不正です。',
    ],
    link_url  => [
        'NOT_BLANK' => 'リンクURLを入力してください。',
        'HTTP_URL'  => 'リンクURLが不正です。',
    ],
    image_url  => [
        'NOT_BLANK' => '画像URLを入力してください。',
        'HTTP_URL'  => '画像URLが不正です。',
    ],
]);

__PACKAGE__->assign(
    main   => [\&assign_common, \&assign_main, \&assign_postkey, \&assign_input],
);

__PACKAGE__->templates(
    main    => 'touch/manage_top_banner.tmpl',
);

__PACKAGE__->conditions(
    _prepare => sub {
        my $self = shift;
        return $self->alert if $self->has_error;

        my $skin_module = Mixi::Skin::Touch::Admin->new;
        $self->stash->{skin_module}         = $skin_module;
        $self->stash->{edit_skin_count_map} = $skin_module->get_edit_skin_count();
        $self->stash->{mode} = $self->mode;

        if ($self->mode eq 'success') {
            $self->stash->{success_message} = SUCCEEDED_TO_SAVE_MESSAGE;
            $self->mode('main');
        }
    },
    -add => sub {
        my $self = shift;
        return $self->alert if $self->has_error('postkey');
        if (my $warnings = $self->has_warnings('add')){
            $self->template->add_error($warnings);
            $self->stash->{link_url}  = $self->param->{link_url},
            $self->stash->{image_url} = $self->param->{image_url},
            $self->mode('main');
            return FIXED;
        }

        my $result = Mixi::Skin::Touch::Store::TopBanner->add(
            link_url  => $self->param->{link_url},
            image_url => $self->param->{image_url},
        );
        $self->alert(FAILED_TO_SAVE_MESSAGE) unless $result;

        return $self->redirect("manage_top_banner.pl?mode=success");
    },
    -edit => sub {
        my $self = shift;
        return $self->alert if $self->has_error('postkey');
        if (my $warnings = $self->has_warnings('edit')){
            $self->template->add_error($warnings);
            $self->stash->{id}        = $self->param->{id},
            $self->stash->{link_url}  = $self->param->{link_url},
            $self->stash->{image_url} = $self->param->{image_url},
            $self->mode('main');
            return FIXED;
        }

        my $id = $self->param->{id};

        my $result = Mixi::Skin::Touch::Store::TopBanner->edit(
            id        => $id,
            link_url  => $self->param->{link_url},
            image_url => $self->param->{image_url},
        );
        $self->alert(FAILED_TO_SAVE_MESSAGE) unless $result;

        return $self->redirect("manage_top_banner.pl?mode=success");
    },
    -remove => sub {
        my $self = shift;
        return $self->alert if $self->has_error('postkey');
        return $self->alert if $self->has_error('remove');

        my $id = $self->param->{id};

        my $result = Mixi::Skin::Touch::Store::TopBanner->remove(id => $id);
        $self->alert(FAILED_TO_SAVE_MESSAGE) unless $result;

        return $self->redirect("manage_top_banner.pl?mode=success");
    },
);

sub assign_common {
    my $self = shift;

    $self->template->param(
        %{$self->stash->{edit_skin_count_map}},
        banner_list     => $self->stash->{banner_list},
        success_message => $self->stash->{success_message},
        mode            => $self->stash->{mode},
    );
}

sub assign_main {
    my $self = shift;

    my $banner_list = Mixi::Skin::Touch::Store::TopBanner->get_top_banner_list;

    $self->template->param(
        banner_list => $banner_list,
    );
}

sub assign_postkey {
    my $self = shift;

    $self->template->param(
        post_key => $self->post_key->encode([qw/_ENV_REMOTE_USER_ _TIMESTAMP_/]),
    );
}

sub assign_input {
    my $self = shift;

    $self->template->param(
        id        => $self->stash->{id},
        link_url  => $self->stash->{link_url},
        image_url => $self->stash->{image_url},
    );
}

1;
